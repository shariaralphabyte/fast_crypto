<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="NONE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="8f605350-9f94-4532-8086-93dba6aa9d22" name="Changes" comment="feat: Add auto-generated `flutter_rust_bridge` files&#10;&#10;This commit introduces the initial auto-generated files required for `flutter_rust_bridge` to connect the Dart front-end with the Rust back-end.&#10;&#10;It also removes the root `.gitignore` file, as project-specific ignore patterns are handled within their respective subdirectories (e.g., `example/` and `rust/`).&#10;&#10;**Key changes:**&#10;&#10;*   **Dart Bridge (`lib/src/rust/frb_generated.dart`):**&#10;    *   Adds the generated Dart code that handles the Foreign Function Interface (FFI) communication.&#10;    *   Defines the `RustLibApi` abstract class, which outlines the available cryptographic functions.&#10;    *   Implements the `RustLibApiImpl` class to manage synchronous and asynchronous calls to the Rust native code.&#10;    *   Includes serialization and deserialization logic for data types and error handling.&#10;&#10;*   **Build Configuration:**&#10;    *   Removes the top-level `.gitignore` file. Standard ignore rules are now managed by the Flutter and Rust project templates.">
      <change beforePath="$PROJECT_DIR$/CHANGELOG.md" beforeDir="false" afterPath="$PROJECT_DIR$/CHANGELOG.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pubspec.yaml" beforeDir="false" afterPath="$PROJECT_DIR$/pubspec.yaml" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="ClangdSettings">
    <option name="formatViaClangd" value="false" />
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GitHubPullRequestSearchHistory"><![CDATA[{
  "lastFilter": {
    "state": "OPEN",
    "assignee": "shariaralphabyte"
  }
}]]></component>
  <component name="GithubPullRequestsUISettings"><![CDATA[{
  "selectedUrlAndAccountId": {
    "url": "https://github.com/shariaralphabyte/fast_crypto.git",
    "accountId": "50b9052a-7d9b-4729-84eb-136503f12a09"
  }
}]]></component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 1
}</component>
  <component name="ProjectId" id="34bDUmj0LZUkuqVZbE7tsvUlLNK" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;Flutter.main.dart.executor&quot;: &quot;Run&quot;,
    &quot;ModuleVcsDetector.initialDetectionPerformed&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.cidr.known.project.marker&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.git.unshallow&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.readMode.enableVisualFormatting&quot;: &quot;true&quot;,
    &quot;cf.first.check.clang-format&quot;: &quot;false&quot;,
    &quot;cidr.known.project.marker&quot;: &quot;true&quot;,
    &quot;dart.analysis.tool.window.visible&quot;: &quot;false&quot;,
    &quot;git-widget-placeholder&quot;: &quot;master&quot;,
    &quot;io.flutter.reload.alreadyRun&quot;: &quot;true&quot;,
    &quot;last_opened_file_path&quot;: &quot;/Users/360infotech/Desktop/fast_crypto&quot;,
    &quot;settings.editor.selected.configurable&quot;: &quot;AndroidSdkUpdater&quot;,
    &quot;show.migrate.to.gradle.popup&quot;: &quot;false&quot;
  }
}</component>
  <component name="RunManager">
    <configuration name="main.dart" type="FlutterRunConfigurationType" factoryName="Flutter">
      <option name="filePath" value="$PROJECT_DIR$/example/lib/main.dart" />
      <method v="2" />
    </configuration>
  </component>
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="8f605350-9f94-4532-8086-93dba6aa9d22" name="Changes" comment="" />
      <created>1761473396791</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1761473396791</updated>
    </task>
    <task id="LOCAL-00001" summary="feat: Initial project structure for fast_crypto plugin&#10;&#10;This commit introduces the initial project structure for the `fast_crypto` plugin, a high-performance cryptography library for Flutter with a Rust backend.&#10;&#10;It includes the complete setup for the plugin itself, an example application, and the underlying Rust native code.&#10;&#10;**Key changes:**&#10;&#10;*   **Plugin Scaffolding:**&#10;    *   Adds standard Flutter plugin files including `pubspec.yaml`, `.gitignore`, `analysis_options.yaml`, and `LICENSE`.&#10;    *   Configures the Android and iOS platform-specific boilerplate.&#10;    *   Initializes a `CHANGELOG.md` and `README.md` with project details, usage instructions, and feature documentation.&#10;&#10;*   **Rust Backend (`rust/`):**&#10;    *   Implements core cryptographic functions using `aes-gcm`, `rsa`, `sha2`, and `pbkdf2` crates.&#10;    *   Features include AES text/file encryption, RSA key generation, encryption/signing, and SHA hashing.&#10;    *   Sets up `flutter_rust_bridge` for communication between Dart and Rust.&#10;    *   Adds comprehensive error handling (`CryptoError` enum) and integration tests.&#10;&#10;*   **Dart API (`lib/`):**&#10;    *   Defines a clean, async Dart API that mirrors the Rust functions.&#10;    *   Exports all necessary functions and models for easy consumption.&#10;    *   Includes auto-generated bridge files (`frb_generated.dart`).&#10;&#10;*   **Example Application (`example/`):**&#10;    *   Provides a full-featured Flutter application to demonstrate all cryptographic operations.&#10;    *   Includes UI for text and file encryption/decryption, hashing, and RSA operations.&#10;    *   Adds necessary dependencies like `file_picker` and `path_provider`.&#10;    *   Configures Android and iOS project files to run the example.">
      <option name="closed" value="true" />
      <created>1761538124912</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1761538124912</updated>
    </task>
    <task id="LOCAL-00002" summary="docs: Update repository links in pubspec&#10;&#10;This commit updates the `homepage` and `repository` URLs in the `pubspec.yaml` file to point to the correct GitHub location for the project.">
      <option name="closed" value="true" />
      <created>1761538232788</created>
      <option name="number" value="00002" />
      <option name="presentableId" value="LOCAL-00002" />
      <option name="project" value="LOCAL" />
      <updated>1761538232788</updated>
    </task>
    <task id="LOCAL-00003" summary="docs: Clean up feature list in README&#10;&#10;This commit removes several items from the feature checklist in the `README.md` file.&#10;&#10;The following planned features have been removed from the list:&#10;*   iOS support&#10;*   macOS/Windows/Linux support&#10;*   Web support (WASM)&#10;*   ChaCha20-Poly1305 cipher&#10;*   Ed25519 signatures">
      <option name="closed" value="true" />
      <created>1761538297319</created>
      <option name="number" value="00003" />
      <option name="presentableId" value="LOCAL-00003" />
      <option name="project" value="LOCAL" />
      <updated>1761538297319</updated>
    </task>
    <task id="LOCAL-00004" summary="chore: Refine pubspec topics&#10;&#10;This commit removes the `rsa` and `sha256` topics from the `pubspec.yaml` file to more accurately reflect the package's focus.">
      <option name="closed" value="true" />
      <created>1761538625735</created>
      <option name="number" value="00004" />
      <option name="presentableId" value="LOCAL-00004" />
      <option name="project" value="LOCAL" />
      <updated>1761538625735</updated>
    </task>
    <task id="LOCAL-00005" summary="chore: Refine pubspec topics&#10;&#10;This commit removes the `rsa` and `sha256` topics from the `pubspec.yaml` file to more accurately reflect the package's focus.">
      <option name="closed" value="true" />
      <created>1761538777231</created>
      <option name="number" value="00005" />
      <option name="presentableId" value="LOCAL-00005" />
      <option name="project" value="LOCAL" />
      <updated>1761538777231</updated>
    </task>
    <task id="LOCAL-00006" summary="feat: Add auto-generated `flutter_rust_bridge` files&#10;&#10;This commit introduces the initial auto-generated files required for `flutter_rust_bridge` to connect the Dart front-end with the Rust back-end.&#10;&#10;It also removes the root `.gitignore` file, as project-specific ignore patterns are handled within their respective subdirectories (e.g., `example/` and `rust/`).&#10;&#10;**Key changes:**&#10;&#10;*   **Dart Bridge (`lib/src/rust/frb_generated.dart`):**&#10;    *   Adds the generated Dart code that handles the Foreign Function Interface (FFI) communication.&#10;    *   Defines the `RustLibApi` abstract class, which outlines the available cryptographic functions.&#10;    *   Implements the `RustLibApiImpl` class to manage synchronous and asynchronous calls to the Rust native code.&#10;    *   Includes serialization and deserialization logic for data types and error handling.&#10;&#10;*   **Build Configuration:**&#10;    *   Removes the top-level `.gitignore` file. Standard ignore rules are now managed by the Flutter and Rust project templates.">
      <option name="closed" value="true" />
      <created>1761539571716</created>
      <option name="number" value="00006" />
      <option name="presentableId" value="LOCAL-00006" />
      <option name="project" value="LOCAL" />
      <updated>1761539571716</updated>
    </task>
    <option name="localTasksCounter" value="7" />
    <servers />
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="feat: Initial project structure for fast_crypto plugin&#10;&#10;This commit introduces the initial project structure for the `fast_crypto` plugin, a high-performance cryptography library for Flutter with a Rust backend.&#10;&#10;It includes the complete setup for the plugin itself, an example application, and the underlying Rust native code.&#10;&#10;**Key changes:**&#10;&#10;*   **Plugin Scaffolding:**&#10;    *   Adds standard Flutter plugin files including `pubspec.yaml`, `.gitignore`, `analysis_options.yaml`, and `LICENSE`.&#10;    *   Configures the Android and iOS platform-specific boilerplate.&#10;    *   Initializes a `CHANGELOG.md` and `README.md` with project details, usage instructions, and feature documentation.&#10;&#10;*   **Rust Backend (`rust/`):**&#10;    *   Implements core cryptographic functions using `aes-gcm`, `rsa`, `sha2`, and `pbkdf2` crates.&#10;    *   Features include AES text/file encryption, RSA key generation, encryption/signing, and SHA hashing.&#10;    *   Sets up `flutter_rust_bridge` for communication between Dart and Rust.&#10;    *   Adds comprehensive error handling (`CryptoError` enum) and integration tests.&#10;&#10;*   **Dart API (`lib/`):**&#10;    *   Defines a clean, async Dart API that mirrors the Rust functions.&#10;    *   Exports all necessary functions and models for easy consumption.&#10;    *   Includes auto-generated bridge files (`frb_generated.dart`).&#10;&#10;*   **Example Application (`example/`):**&#10;    *   Provides a full-featured Flutter application to demonstrate all cryptographic operations.&#10;    *   Includes UI for text and file encryption/decryption, hashing, and RSA operations.&#10;    *   Adds necessary dependencies like `file_picker` and `path_provider`.&#10;    *   Configures Android and iOS project files to run the example." />
    <MESSAGE value="docs: Update repository links in pubspec&#10;&#10;This commit updates the `homepage` and `repository` URLs in the `pubspec.yaml` file to point to the correct GitHub location for the project." />
    <MESSAGE value="docs: Clean up feature list in README&#10;&#10;This commit removes several items from the feature checklist in the `README.md` file.&#10;&#10;The following planned features have been removed from the list:&#10;*   iOS support&#10;*   macOS/Windows/Linux support&#10;*   Web support (WASM)&#10;*   ChaCha20-Poly1305 cipher&#10;*   Ed25519 signatures" />
    <MESSAGE value="chore: Add MIT License&#10;&#10;This commit replaces the placeholder `TODO` in the `LICENSE` file with the full text of the MIT License.&#10;&#10;The copyright notice is attributed to &quot;Shariar&quot;." />
    <MESSAGE value="chore: Refine pubspec topics&#10;&#10;This commit removes the `rsa` and `sha256` topics from the `pubspec.yaml` file to more accurately reflect the package's focus." />
    <MESSAGE value="feat: Add auto-generated `flutter_rust_bridge` files&#10;&#10;This commit introduces the initial auto-generated files required for `flutter_rust_bridge` to connect the Dart front-end with the Rust back-end.&#10;&#10;It also removes the root `.gitignore` file, as project-specific ignore patterns are handled within their respective subdirectories (e.g., `example/` and `rust/`).&#10;&#10;**Key changes:**&#10;&#10;*   **Dart Bridge (`lib/src/rust/frb_generated.dart`):**&#10;    *   Adds the generated Dart code that handles the Foreign Function Interface (FFI) communication.&#10;    *   Defines the `RustLibApi` abstract class, which outlines the available cryptographic functions.&#10;    *   Implements the `RustLibApiImpl` class to manage synchronous and asynchronous calls to the Rust native code.&#10;    *   Includes serialization and deserialization logic for data types and error handling.&#10;&#10;*   **Build Configuration:**&#10;    *   Removes the top-level `.gitignore` file. Standard ignore rules are now managed by the Flutter and Rust project templates." />
    <option name="LAST_COMMIT_MESSAGE" value="feat: Add auto-generated `flutter_rust_bridge` files&#10;&#10;This commit introduces the initial auto-generated files required for `flutter_rust_bridge` to connect the Dart front-end with the Rust back-end.&#10;&#10;It also removes the root `.gitignore` file, as project-specific ignore patterns are handled within their respective subdirectories (e.g., `example/` and `rust/`).&#10;&#10;**Key changes:**&#10;&#10;*   **Dart Bridge (`lib/src/rust/frb_generated.dart`):**&#10;    *   Adds the generated Dart code that handles the Foreign Function Interface (FFI) communication.&#10;    *   Defines the `RustLibApi` abstract class, which outlines the available cryptographic functions.&#10;    *   Implements the `RustLibApiImpl` class to manage synchronous and asynchronous calls to the Rust native code.&#10;    *   Includes serialization and deserialization logic for data types and error handling.&#10;&#10;*   **Build Configuration:**&#10;    *   Removes the top-level `.gitignore` file. Standard ignore rules are now managed by the Flutter and Rust project templates." />
  </component>
</project>